definitions:
  contracts.ProductCreationRequest:
    properties:
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    required:
    - name
    - price
    - quantity
    type: object
  contracts.ProductUpdateRequest:
    properties:
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  contracts.SellCreationRequest:
    properties:
      name:
        type: string
      productId:
        type: integer
      quantity:
        type: integer
    required:
    - productId
    type: object
  models.Product:
    properties:
      available:
        type: integer
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      sells:
        items:
          $ref: '#/definitions/models.Sell'
        type: array
      updatedAt:
        type: string
    type: object
  models.Sell:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      product:
        $ref: '#/definitions/models.Product'
      quantity:
        type: integer
    type: object
info:
  contact: {}
paths:
  /products:
    get:
      consumes:
      - application/json
      description: Get all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Product'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all products
      tags:
      - products
    post:
      consumes:
      - application/json
      description: Create a product
      parameters:
      - description: Product Creation Request
        in: body
        name: productCreationRequest
        required: true
        schema:
          $ref: '#/definitions/contracts.ProductCreationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create a product
      tags:
      - products
  /products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a product
      tags:
      - products
    get:
      consumes:
      - application/json
      description: Get a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
      summary: Get a product by ID
      tags:
      - products
    put:
      consumes:
      - application/json
      description: Update a product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product Update Request
        in: body
        name: productUpdateRequest
        required: true
        schema:
          $ref: '#/definitions/contracts.ProductUpdateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Product'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Update a product
      tags:
      - products
  /sells/:
    get:
      consumes:
      - application/json
      description: Get all sells
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Sell'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get all sells
      tags:
      - sells
    post:
      consumes:
      - application/json
      description: Create Sell by providing product id and optional quantity
      parameters:
      - description: Sell Creation Request
        in: body
        name: sellCreationRequest
        required: true
        schema:
          $ref: '#/definitions/contracts.SellCreationRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Sell'
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Create Sell
      tags:
      - sells
  /sells/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a sell by id
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Delete a sell
      tags:
      - sells
  /sells/{productId}:
    get:
      consumes:
      - application/json
      description: Get sells by product ID
      parameters:
      - description: Product ID
        in: path
        name: productId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Sell'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Get sells by product ID
      tags:
      - sells
swagger: "2.0"
